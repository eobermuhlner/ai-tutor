###########################
### Authentication Examples
###########################

### Register New User
# @name register
POST {{host}}/api/v1/auth/register
Content-Type: application/json

{
  "username": "demouser",
  "email": "demo@example.com",
  "password": "DemoPassword123",
  "firstName": "Demo",
  "lastName": "User"
}

> {%
    client.global.set("userId", response.body.id);
%}

### Login User
# @name login
POST {{host}}/api/v1/auth/login
Content-Type: application/json

{
  "username": "demo",
  "password": "demo"
}

> {%
    client.global.set("accessToken", response.body.accessToken);
    client.global.set("refreshToken", response.body.refreshToken);
    client.global.set("userId", response.body.user.id);
%}

### Refresh Access Token
POST {{host}}/api/v1/auth/refresh
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}

> {%
    client.global.set("accessToken", response.body.accessToken);
    client.global.set("refreshToken", response.body.refreshToken);
%}

### Get Current User Profile
GET {{host}}/api/v1/auth/me
Authorization: Bearer {{accessToken}}
Accept: application/json

### Change Password
POST {{host}}/api/v1/auth/password
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "currentPassword": "DemoPassword123",
  "newPassword": "NewDemoPassword456"
}

### Logout
POST {{host}}/api/v1/auth/logout
Authorization: Bearer {{accessToken}}

###

###########################
### Chat Session Examples
###########################

### Create Chat Session
# @name createSession
POST {{host}}/api/v1/chat/sessions
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "userId": "{{userId}}",
  "tutorName": "Maria",
  "tutorPersona": "patient coach",
  "tutorDomain": "general conversation, grammar, typography",
  "sourceLanguageCode": "en",
  "targetLanguageCode": "es",
  "conversationPhase": "Auto",
  "estimatedCEFRLevel": "A1"
}

> {%
    client.global.set("chatSessionId", response.body.id);
%}

### Get User Sessions
GET {{host}}/api/v1/chat/sessions?userId={{userId}}
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Session with Messages
GET {{host}}/api/v1/chat/sessions/{{chatSessionId}}
Authorization: Bearer {{accessToken}}
Accept: application/json

### Update Session Phase to Free (Pure fluency, no error tracking)
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/phase
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "phase": "Free"
}

### Update Session Phase to Correction (Errors tracked for UI hover)
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/phase
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "phase": "Correction"
}

### Update Session Phase to Drill (Explicit error work)
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/phase
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "phase": "Drill"
}

### Update Session Phase to Auto (System decides)
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/phase
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "phase": "Auto"
}

### Update Session Teaching Style to Reactive (Follow learner's lead)
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/teaching-style
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "teachingStyle": "Reactive"
}

### Update Session Teaching Style to Guided (Strategic prompts)
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/teaching-style
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "teachingStyle": "Guided"
}

### Update Session Teaching Style to Directive (Explicit instruction)
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/teaching-style
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "teachingStyle": "Directive"
}

### Send Message (Non-Streaming)
POST {{host}}/api/v1/chat/sessions/{{chatSessionId}}/messages
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "content": "Hola, como estas?"
}

### Send Message (Non-Streaming)
POST {{host}}/api/v1/chat/sessions/{{chatSessionId}}/messages
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "content": "Hi, how are doing?"
}

### Send Message (Non-Streaming)
POST {{host}}/api/v1/chat/sessions/{{chatSessionId}}/messages
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "content": "Give me a list of vocabulary that I am learning."
}


### Send Message (Streaming with SSE)
POST {{host}}/api/v1/chat/sessions/{{chatSessionId}}/messages/stream
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "content": "Me gusta aprender español"
}

### Update Session Topic
PATCH {{host}}/api/v1/chat/sessions/{{chatSessionId}}/topic
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "currentTopic": "travel"
}

### Get Topic History
GET {{host}}/api/v1/chat/sessions/{{chatSessionId}}/topics/history
Authorization: Bearer {{accessToken}}
Accept: application/json

### Delete Session
DELETE {{host}}/api/v1/chat/sessions/{{chatSessionId}}
Authorization: Bearer {{accessToken}}

###

###########################
### Vocabulary Examples
###########################

### Get User Vocabulary (All Languages)
GET {{host}}/api/v1/vocabulary?userId={{userId}}
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get User Vocabulary (Specific Language)
GET {{host}}/api/v1/vocabulary?userId={{userId}}&lang=es
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Vocabulary Item with Contexts
# @name getVocabItem
GET {{host}}/api/v1/vocabulary/VOCABULARY_ITEM_ID
Authorization: Bearer {{accessToken}}
Accept: application/json

###

###########################
### User Language Examples
###########################

### Get User Languages (All Types)
GET {{host}}/api/v1/users/{{userId}}/languages
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get User Languages (Source Only)
GET {{host}}/api/v1/users/{{userId}}/languages?type=Source
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get User Languages (Target Only)
GET {{host}}/api/v1/users/{{userId}}/languages?type=Target
Authorization: Bearer {{accessToken}}
Accept: application/json

### Add Language to User Profile
# @name addLanguage
POST {{host}}/api/v1/users/{{userId}}/languages
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "languageCode": "fr",
  "type": "Target",
  "cefrLevel": "A1",
  "isNative": false
}

> {%
    client.global.set("languageId", response.body.id);
%}

### Update Language Level
PATCH {{host}}/api/v1/users/{{userId}}/languages/{{languageId}}
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "cefrLevel": "A2"
}

### Set Primary Target Language
POST {{host}}/api/v1/users/{{userId}}/languages/{{languageId}}/primary
Authorization: Bearer {{accessToken}}

### Remove Language from User Profile
DELETE {{host}}/api/v1/users/{{userId}}/languages/{{languageId}}
Authorization: Bearer {{accessToken}}

###

###########################
### Catalog Examples
###########################

### List Available Languages
GET {{host}}/api/v1/catalog/languages?sourceLanguage=en
Accept: application/json

### List Available Languages (Spanish)
GET {{host}}/api/v1/catalog/languages?sourceLanguage=es
Accept: application/json

### List Courses for Language
# @name listCourses
GET {{host}}/api/v1/catalog/languages/es/courses?sourceLanguage=en
Accept: application/json

> {%
    client.global.set("courseId", response.body[0].id);
%}

### List Courses for Language (Filtered by User Level)
GET {{host}}/api/v1/catalog/languages/es/courses?sourceLanguage=en&userLevel=A1
Accept: application/json

### Get Course Detail
GET {{host}}/api/v1/catalog/courses/{{courseId}}?sourceLanguage=en
Accept: application/json

> {%
    client.global.set("tutorId", response.body.suggestedTutors[0].id);
%}

### List Tutors for Language
GET {{host}}/api/v1/catalog/languages/es/tutors?sourceLanguage=en
Accept: application/json

### Get Tutor Detail
GET {{host}}/api/v1/catalog/tutors/{{tutorId}}?sourceLanguage=en
Accept: application/json

### Create New Tutor
# @name createTutor
POST {{host}}/api/v1/catalog/tutors
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "name": "Carlos",
  "emoji": "👨‍🏫",
  "personaEnglish": "enthusiastic teacher",
  "domainEnglish": "business Spanish, formal conversation",
  "descriptionEnglish": "Carlos is a business Spanish specialist who helps professionals communicate effectively in Spanish-speaking work environments",
  "culturalBackground": "Native of Madrid, Spain with experience in Latin American business culture",
  "personality": "Warm",
  "teachingStyle": "Guided",
  "targetLanguageCode": "es",
  "isActive": true,
  "displayOrder": 100
}

> {%
    client.global.set("newTutorId", response.body.id);
%}

###

###########################
### Course-Based Session Examples
###########################

### Create Session from Course
# @name createCourseSession
POST {{host}}/api/v1/chat/sessions/from-course
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "userId": "{{userId}}",
  "courseTemplateId": "{{courseId}}",
  "tutorProfileId": "{{tutorId}}",
  "sourceLanguageCode": "en",
  "customName": "My Spanish Course"
}

> {%
    client.global.set("courseSessionId", response.body.id);
%}

### Get Active Learning Sessions with Progress
GET {{host}}/api/v1/chat/sessions/active?userId={{userId}}
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Session Progress
GET {{host}}/api/v1/chat/sessions/{{courseSessionId}}/progress
Authorization: Bearer {{accessToken}}
Accept: application/json


### Get Session Progress
GET {{host}}/api/v1/images/concept/vacation/data
Authorization: Bearer {{accessToken}}
Accept: application/json

###########################
### Summarization Examples
###########################

### Get Session Summary Info (owner or admin)
GET {{host}}/api/v1/summaries/sessions/{{sessionId}}/info
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Session Summary Details (admin only)
GET {{host}}/api/v1/summaries/sessions/{{sessionId}}/details
Authorization: Bearer {{accessToken}}
Accept: application/json

### Trigger Manual Summarization (admin only)
POST {{host}}/api/v1/summaries/sessions/{{sessionId}}/trigger
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Global Summarization Stats (admin only)
GET {{host}}/api/v1/summaries/stats
Authorization: Bearer {{accessToken}}
Accept: application/json

###

###########################
### Error Analytics Examples
###########################

### Get Top Error Patterns (Default: Top 5)
GET {{host}}/api/v1/analytics/errors/patterns?lang=es
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Top 10 Error Patterns
GET {{host}}/api/v1/analytics/errors/patterns?lang=es&limit=10
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Error Trend for Agreement Errors
GET {{host}}/api/v1/analytics/errors/trends/Agreement?lang=es
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Error Trend for TenseAspect Errors
GET {{host}}/api/v1/analytics/errors/trends/TenseAspect?lang=es
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Recent Error Samples (Default: Last 20)
GET {{host}}/api/v1/analytics/errors/samples
Authorization: Bearer {{accessToken}}
Accept: application/json

### Get Last 50 Error Samples
GET {{host}}/api/v1/analytics/errors/samples?limit=50
Authorization: Bearer {{accessToken}}
Accept: application/json

###

###########################
### CEFR Assessment Examples
###########################

### Get Skill-Specific CEFR Breakdown for Session
GET {{host}}/api/v1/assessment/sessions/{{chatSessionId}}/skills
Authorization: Bearer {{accessToken}}
Accept: application/json

### Trigger Manual Reassessment (Force skill recalculation)
POST {{host}}/api/v1/assessment/sessions/{{chatSessionId}}/reassess
Authorization: Bearer {{accessToken}}
Accept: application/json

###

###########################
### Text-to-Speech Examples
###########################

### Get Available Voices
GET {{host}}/api/v1/chat/audio/voices
Authorization: Bearer {{accessToken}}
Accept: application/json

### Synthesize Speech from Arbitrary Text (Default Voice)
POST {{host}}/api/v1/chat/synthesize
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "text": "Hola, ¿cómo estás? Me llamo María y soy tu profesora de español."
}

### Synthesize Speech with Specific Voice (Warm)
POST {{host}}/api/v1/chat/synthesize
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "text": "¡Buenos días! Hoy vamos a aprender sobre los verbos regulares.",
  "voiceId": "Warm",
  "speed": 1.0
}

### Synthesize Speech with Authoritative Voice
POST {{host}}/api/v1/chat/synthesize
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "text": "Presta atención a la conjugación de estos verbos.",
  "voiceId": "Authoritative",
  "speed": 0.9
}

### Synthesize Audio for Specific Message
# First send a message, then use the message ID from the response
# @name sendMessageForAudio
POST {{host}}/api/v1/chat/sessions/{{courseSessionId}}/messages
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "content": "Hola profesora"
}

> {%
    client.global.set("lastMessageId", response.body.id);
%}

### Get Audio for Last Message
POST {{host}}/api/v1/chat/sessions/{{courseSessionId}}/messages/{{lastMessageId}}/audio
Authorization: Bearer {{accessToken}}

### Get Audio for Last Message (Slower Speed)
POST {{host}}/api/v1/chat/sessions/{{courseSessionId}}/messages/{{lastMessageId}}/audio?speed=0.75
Authorization: Bearer {{accessToken}}

###
